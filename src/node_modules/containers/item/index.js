import React, {Component} from 'react'
import {connect} from 'react-redux'
import * as R from 'ramda'

import {fetchItemById} from 'actions'
import {getItemById} from 'selectors'

class Item extends Component {
	componentDidMount () {
		this.props.fetchItemById(this.props.match.params.id)
	}

	renderFields() {
		const {item} = this.props
		const fields = R.compose(
				R.toPairs,
				R.pick([
					'cpu',
					'camera',
					'size',
					'weight',
					'display',
					'memory'
				])
			)(item)

		return fields.map(([key, value]) =>(
					<div className='column' key={key}>
						<div className='ad-details-title'>
							<p>{key}</p>
						</div>
						<div className='ad-details-info'>
							{value}
						</div>
					</div>
				)
			)
	}

	renderContent() {
		const {item} = this.props
		return (
			<div className='thumbnail'>
				<div className='row'>
					<div className='col-md-6'>
						<img 
							className='img-thumbnail' 
							src={item.image} 
							alt={item.name}
						/>
					</div>
					<div className='col-md-6'>
						{this.renderFields()}
					</div>
				</div>
				<div className='captioon-full'>
					<h4 className='pull-right'>${item.price}</h4>
					<h4>{item.name}</h4>
					<p>{item.description}</p>
				</div>
			</div>
		)
	}


	render() {
		console.log('item', this.props.item)
		const {item} = this.props
		return (
			<div>{item && this.renderContent()}</div>		
		)
	}
}

const mapDispatchToProps = {
	fetchItemById
}

const mapStateProps = state => ({
	item: getItemById(state, state.itemPage.id)
})

export default connect(mapStateProps, mapDispatchToProps)(Item)